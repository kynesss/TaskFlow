@model IEnumerable<TaskFlow.Application.DTOs.TaskItemDto>

@{
	ViewData["Title"] = "Tasks";
}

<h1>Tasks</h1>

<p>
	<a asp-action="Create">Create New</a>
</p>
<table class="table">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.Id)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Title)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Description)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Priority)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Status)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.CreatedAt)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.CreatedBy)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.AssignedTo)
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.Id)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Title)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Description)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Priority)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Status)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.CreatedAt)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.CreatedByEmail)
				</td>
				<td>
					@(string.IsNullOrEmpty(item.AssignedToEmail) ? "None" : item.AssignedToEmail)
				</td>
				<td>
					@Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
					@Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
					@Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
				</td>
			</tr>
		}
	</tbody>
</table>
